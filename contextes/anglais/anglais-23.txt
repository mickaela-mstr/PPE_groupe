          + matplotlib.axes.Axes.get_title
          + matplotlib.axes.Axes.legend
          + matplotlib.axes.Axes.get_legend
--
          + matplotlib.figure.Figure.colorbar
          + matplotlib.figure.Figure.legend
          + matplotlib.figure.Figure.text
--
          + matplotlib.figure.SubFigure.colorbar
          + matplotlib.figure.SubFigure.legend
          + matplotlib.figure.SubFigure.text
--
     * matplotlib.layout_engine
     * matplotlib.legend
     * matplotlib.legend_handler
--
          + matplotlib.pyplot.figlegend
          + matplotlib.pyplot.legend
          + matplotlib.pyplot.barbs
--

matplotlib.legend#

   The legend module defines the Legend class, which is responsible for
   drawing legends associated with Axes and/or figures.

--

   It is unlikely that you would ever create a Legend instance manually.
   Most users would normally create a legend via the legend function. For
   more details on legends there is also a legend guide.

   The Legend class is a container of legend handles and legend texts.

   The legend handler map specifies how to create legend handles from
   artists (lines, patches, etc.) in the Axes or figures. Default legend
   handlers are defined in the legend_handler module. While not all artist
   types are covered by the default legend handlers, custom legend
   handlers can be defined to support arbitrary objects.
--

   class matplotlib.legend.DraggableLegend(legend, use_blit=False,
          update='loc')[source]#
--

          Wrapper around a Legend to support mouse dragging.

--
              legendLegend
                      The Legend instance to wrap.

--
              update{'loc', 'bbox'}, optional
                      If "loc", update the loc parameter of the legend
                      upon finalizing. If "bbox", update the
--

   class matplotlib.legend.Legend(parent, handles, labels, *, loc=None,
          numpoints=None, markerscale=None, markerfirst=True,
--

          Place a legend on the figure/axes.

--
              parentAxes or Figure
                      The artist that contains the legend.

--
                      A list of Artists (lines, patches) to be added to
                      the legend.

--
              legend_handles
                      List of Artist objects added as legend entries.

--

              locstr or pair of floats, default: rcParams["legend.loc"]
                      (default: 'best') for Axes, 'upper right' for Figure
                      The location of the legend.

                      The strings 'upper left', 'upper right', 'lower
                      left', 'lower right' place the legend at the
                      corresponding corner of the axes/figure.
--
                      The strings 'upper center', 'lower center', 'center
                      left', 'center right' place the legend at the center
                      of the corresponding edge of the axes/figure.

                      The string 'center' places the legend at the center
                      of the axes/figure.

                      The string 'best' places the legend at the location,
                      among the nine locations defined so far, with the
--
                      The location can also be a 2-tuple giving the
                      coordinates of the lower-left corner of the legend
                      in axes/figure coordinates (in which case
--
                      There is ambiguity at the corners, so 'outside upper
                      right' will make space for the legend above the rest
                      of the axes in the layout, and 'outside right upper'
--
                      'outside left upper', and 'outside left lower'. See
                      Legend guide for more details.

              bbox_to_anchorBboxBase, 2-tuple, or 4-tuple of floats
                      Box that is used to position the legend in
                      conjunction with loc. Defaults to axes.bbox (if
                      called as a method to Axes.legend) or figure.bbox
                      (if figure.legend). This argument allows arbitrary
                      placement of the legend.

--
                      transform Axes or Figure coordinates, depending on
                      which legend is called.

                      If a 4-tuple or BboxBase is given, then it specifies
                      the bbox (x, y, width, height) that the legend is
                      placed in. To put the legend in the best location in
                      the bottom right quadrant of the Axes (or figure):
--

                      A 2-tuple (x, y) places the corner of the legend
                      specified by loc at x, y. For example, to put the
                      legend's upper right-hand corner in the center of
                      the Axes (or figure) the following keywords can be
--
              ncolsint, default: 1
                      The number of columns that the legend has.

--
              propNone or FontProperties or dict
                      The font properties of the legend. If None
                      (default), the current matplotlib.rcParams will be
--
                      'large', 'x-large', 'xx-large'}
                      The font size of the legend. If the value is numeric
                      the size will be the absolute font size in points.
--
              labelcolorstr or list, default:
                      rcParams["legend.labelcolor"] (default: 'None')
                      The color of the text in the legend. Either a valid
                      color string (for example, 'red'), or a list of
--
                      Labelcolor can be set globally using
                      rcParams["legend.labelcolor"] (default: 'None'). If
                      None, use rcParams["text.color"] (default: 'black').

              numpointsint, default: rcParams["legend.numpoints"]
                      (default: 1)
                      The number of marker points in the legend when
                      creating a legend entry for a Line2D (line).

              scatterpointsint, default: rcParams["legend.scatterpoints"]
                      (default: 1)
                      The number of marker points in the legend when
                      creating a legend entry for a PathCollection
                      (scatter plot).
--
                      The vertical offset (relative to the font size) for
                      the markers created for a scatter plot legend entry.
                      0.0 is at the base the legend text, and 1.0 is at
                      the top. To draw all markers at the same height, set
--

              markerscalefloat, default: rcParams["legend.markerscale"]
                      (default: 1.0)
                      The relative size of legend markers compared to the
                      originally drawn ones.
--
              markerfirstbool, default: True
                      If True, legend marker is placed to the left of the
                      legend label. If False, legend marker is placed to
                      the right of the legend label.

              reversebool, default: False
                      If True, the legend labels are displayed in reverse
                      order from the input. If False, the legend labels
                      are displayed in the same order as the input.
--

              frameonbool, default: rcParams["legend.frameon"] (default:
                      True)
                      Whether the legend should be drawn on a patch
                      (frame).

              fancyboxbool, default: rcParams["legend.fancybox"] (default:
                      True)
                      Whether round edges should be enabled around the
                      FancyBboxPatch which makes up the legend's
                      background.

              shadowNone, bool or dict, default: rcParams["legend.shadow"]
                      (default: False)
                      Whether to draw a shadow behind the legend. The
                      shadow can be configured using Patch keywords.
                      Customization via rcParams["legend.shadow"]
                      (default: False) is currently not supported.

              framealphafloat, default: rcParams["legend.framealpha"]
                      (default: 0.8)
                      The alpha transparency of the legend's background.
                      If shadow is activated and framealpha is None, the
--
              facecolor"inherit" or color, default:
                      rcParams["legend.facecolor"] (default: 'inherit')
                      The legend's background color. If "inherit", use
                      rcParams["axes.facecolor"] (default: 'white').
--
              edgecolor"inherit" or color, default:
                      rcParams["legend.edgecolor"] (default: '0.8')
                      The legend's background patch edge color. If
                      "inherit", use rcParams["axes.edgecolor"] (default:
--
              mode{"expand", None}
                      If mode is set to "expand" the legend will be
                      horizontally expanded to fill the Axes area (or
                      bbox_to_anchor if defines the legend's size).

--
              titlestr or None
                      The legend's title. Default is no title (None).

              title_fontpropertiesNone or FontProperties or dict
                      The font properties of the legend's title. If None
                      (default), the title_fontsize argument will be used
                      if present; if title_fontsize is also None, the
                      current rcParams["legend.title_fontsize"] (default:
                      None) will be used.
--
                      'medium', 'large', 'x-large', 'xx-large'}, default:
                      rcParams["legend.title_fontsize"] (default: None)
                      The font size of the legend's title. Note: This
                      cannot be combined with title_fontproperties. If you
--
              alignment{'center', 'left', 'right'}, default: 'center'
                      The alignment of the legend title and the box of
                      entries. The entries are aligned as a single block,
--

              borderpadfloat, default: rcParams["legend.borderpad"]
                      (default: 0.4)
                      The fractional whitespace inside the legend border,
                      in font-size units.

              labelspacingfloat, default: rcParams["legend.labelspacing"]
                      (default: 0.5)
                      The vertical space between the legend entries, in
                      font-size units.

              handlelengthfloat, default: rcParams["legend.handlelength"]
                      (default: 2.0)
                      The length of the legend handles, in font-size
                      units.

              handleheightfloat, default: rcParams["legend.handleheight"]
                      (default: 0.7)
                      The height of the legend handles, in font-size
                      units.
--
              handletextpadfloat, default:
                      rcParams["legend.handletextpad"] (default: 0.8)
                      The pad between the legend handle and text, in
                      font-size units.
--
              borderaxespadfloat, default:
                      rcParams["legend.borderaxespad"] (default: 0.5)
                      The pad between the Axes and legend border, in
                      font-size units.
--
              columnspacingfloat, default:
                      rcParams["legend.columnspacing"] (default: 2.0)
                      The spacing between columns, in font-size units.
--
                      The custom dictionary mapping instances or types to
                      a legend handler. This handler_map updates the
                      default handler map found at
                      matplotlib.legend.Legend.get_legend_handler_map.

              draggablebool, default: False
                      Whether the legend can be dragged with the mouse.

--
        draw_frame(b)[source]#
                Set whether the legend box patch is drawn.

--
        get_alignment()[source]#
                Get the alignment value of the legend box

        get_bbox_to_anchor()[source]#
                Return the bbox that the legend will be anchored to.

--
                Return the global default handler map, shared by all
                legends.

        get_draggable()[source]#
                Return True if the legend is draggable, False otherwise.

        get_frame()[source]#
                Return the Rectangle used to frame the legend.

        get_frame_on()[source]#
                Get whether the legend box patch is drawn.

--
                orig_handle)[source]#
                Return a legend handler from legend_handler_map that
                corresponds to orig_handler.
--
        get_legend_handler_map()[source]#
                Return this legend instance's handler map.

        get_lines()[source]#
                Return the list of Line2Ds in the legend.

        get_patches()[source]#
                Return the list of Patchs in the legend.

        get_texts()[source]#
                Return the list of Texts in the legend.

--
        get_title()[source]#
                Return the Text instance for the legend title.

--
     loc
   str or pair of floats, default: rcParams["legend.loc"] (default:
   'best') for Axes, 'upper right' for Figure
--
        set_alignment(alignment)[source]#
                Set the alignment of the legend title and the box of
                entries.
--
        set_bbox_to_anchor(bbox, transform=None)[source]#
                Set the bbox that the legend will be anchored to.

--
        classmethod set_default_handler_map(handler_map)[source]#
                Set the global default handler map, shared by all legends.

        set_draggable(state, use_blit=False, update='loc')[source]#
                Enable or disable mouse dragging support of the legend.

--
                    update{'loc', 'bbox'}, optional
                            The legend parameter to be changed when
                            dragged:

                         @ 'loc': update the loc parameter of the legend
                         @ 'bbox': update the bbox_to_anchor parameter of
                           the legend

--
        set_frame_on(b)[source]#
                Set whether the legend box patch is drawn.

--
        set_loc(loc=None)[source]#
                Set the location of the legend.

--
                    locstr or pair of floats, default:
                            rcParams["legend.loc"] (default: 'best') for
                            Axes, 'upper right' for Figure
                            The location of the legend.

                            The strings 'upper left', 'upper right',
                            'lower left', 'lower right' place the legend
                            at the corresponding corner of the
--
                            The strings 'upper center', 'lower center',
                            'center left', 'center right' place the legend
                            at the center of the corresponding edge of the
--

                            The string 'center' places the legend at the
                            center of the axes/figure.

                            The string 'best' places the legend at the
                            location, among the nine locations defined so
--
                            coordinates of the lower-left corner of the
                            legend in axes/figure coordinates (in which
                            case bbox_to_anchor will be ignored).
--
                            the corners, so 'outside upper right' will
                            make space for the legend above the rest of
                            the axes in the layout, and 'outside right
--
                            'outside right lower', 'outside left upper',
                            and 'outside left lower'. See Legend guide for
                            more details.
--
        set_title(title, prop=None)[source]#
                Set legend title and title style.

--
                    titlestr
                            The legend title.

                    propfont_manager.FontProperties or str or pathlib.Path
                            The font properties of the legend title. If a
                            str, it is interpreted as a fontconfig pattern
--
                Update the global default handler map, shared by all
                legends.

--
          + DraggableLegend.finalize_offset()
     * Legend
          + Legend.codes
          + Legend.contains()
          + Legend.draw()
          + Legend.draw_frame()
          + Legend.get_alignment()
          + Legend.get_bbox_to_anchor()
          + Legend.get_children()
          + Legend.get_default_handler_map()
          + Legend.get_draggable()
          + Legend.get_frame()
          + Legend.get_frame_on()
          + Legend.get_legend_handler()
          + Legend.get_legend_handler_map()
          + Legend.get_lines()
          + Legend.get_patches()
          + Legend.get_texts()
          + Legend.get_tightbbox()
          + Legend.get_title()
          + Legend.get_window_extent()
          + Legend.set()
          + Legend.set_alignment()
          + Legend.set_bbox_to_anchor()
          + Legend.set_default_handler_map()
          + Legend.set_draggable()
          + Legend.set_frame_on()
          + Legend.set_loc()
          + Legend.set_ncols()
          + Legend.set_title()
          + Legend.update_default_handler_map()
          + Legend.zorder

